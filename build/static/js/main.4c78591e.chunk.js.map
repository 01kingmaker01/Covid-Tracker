{"version":3,"sources":["components/Cards/Cards.module.css","components/Chart/Chart.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/CountryPicker/CountryPicker.module.css","App.module.css","image.png"],"names":["module","exports","Cards","data","last_update","total_cases","total_deaths","total_recovered","className","styles","container","Grid","spacing","justify","elevation","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","blue","gutterBottom","variant","start","end","duration","separator","color","Date","toDateString","recovered","green","deaths","red","url","fetchData","country","a","axios","get","modifiedData","map","cases","console","log","countriesName","name","alpha2","error","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","length","deathPer","Math","round","dailyDataUpdated","filter","e","match","unshift","push","lineChart","labels","datasets","label","borderColor","backgroundColor","fill","chartWrapper","chartAreaWrapper","href","CountryPicker","handleCountry","fetchedCountries","setFetchedCountries","fetchCountries","FormControl","formControl","NativeSelect","select","defaultValue","onChange","target","value","option","i","key","App","state","isLoading","fetchedData","setState","this","loading","src","covid","image","alt","graphContainer","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4c78591e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3FwxG\",\"card\":\"Cards_card__jmFxy\",\"green\":\"Cards_green__V-3nz\",\"blue\":\"Cards_blue__Czzz0\",\"red\":\"Cards_red__2fz54\",\"infected\":\"Cards_infected__3WIfi\",\"recovered\":\"Cards_recovered__3Az4I\",\"deaths\":\"Cards_deaths__ERTeB\",\"Chart\":\"Cards_Chart__IkJjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2JzrA\",\"card\":\"Chart_card__1NtaD\",\"chartWrapper\":\"Chart_chartWrapper__VDJSC\",\"blue\":\"Chart_blue__354FY\",\"red\":\"Chart_red__1GwLW\",\"chartAreaWrapper\":\"Chart_chartAreaWrapper__3mBti\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({\r\n  data: { last_update, total_cases, total_deaths, total_recovered },\r\n}) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={4} justify='center'>\r\n        <Grid\r\n          elevation={5}\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography className={styles.blue} gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp\r\n                start={0}\r\n                end={total_cases}\r\n                duration={1.5}\r\n                separator=','\r\n              />\r\n            </Typography>\r\n            <Typography color='textSecondary'>\r\n              {new Date(last_update).toDateString()}\r\n            </Typography>\r\n            <Typography variant='body2'>\r\n              Number of Active Cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          elevation={5}\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography className={styles.green} gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp\r\n                start={0}\r\n                end={total_recovered}\r\n                duration={1.5}\r\n                separator=','\r\n              />\r\n            </Typography>\r\n            <Typography color='textSecondary'>\r\n              {new Date(last_update).toDateString()}\r\n            </Typography>\r\n            <Typography variant='body2'>\r\n              Number of Recoveries from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          elevation={5}\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography className={styles.red} gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp\r\n                start={0}\r\n                end={total_deaths}\r\n                duration={1.5}\r\n                separator=','\r\n              />\r\n            </Typography>\r\n            <Typography color='textSecondary'>\r\n              {new Date(last_update).toDateString()}\r\n            </Typography>\r\n            <Typography variant='body2'>\r\n              Number of Deaths caused by COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\n// const url = 'https://covid19-api.org/api/status#';\r\nconst url = 'https://covid19-api.org/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  // if (country && country !== '') {\r\n  //   let urlCountry = `${url}/timeline/${country}`;\r\n  //   // console.log(urlCountry);\r\n  // }\r\n  try {\r\n    if (country && country !== '') {\r\n      const { data } = await axios.get(`${url}/timeline/${country}`);\r\n      const modifiedData = data.map(\r\n        ({ last_update, cases, deaths, recovered }) => ({\r\n          total_cases: cases,\r\n          total_deaths: deaths,\r\n          total_recovered: recovered,\r\n          last_update,\r\n        })\r\n      );\r\n      // console.log(modifiedData);\r\n      return modifiedData;\r\n    } else {\r\n      const { data } = await axios.get(`${url}/timeline/`);\r\n      // console.log(data);\r\n      return data;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const countriesName = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/countries`);\r\n    return data.map(({ name, alpha2 }) => ({ name, alpha2 }));\r\n    // return{name,alpha2}\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchData } from '../../api';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ country, data }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchData(country));\r\n    };\r\n    fetchAPI();\r\n  }, [setDailyData, country]);\r\n\r\n  if (dailyData.length) {\r\n    var deathPer = Math.round(\r\n      (dailyData[0].total_deaths / dailyData[0].total_cases) * 100\r\n    );\r\n\r\n    var dailyDataUpdated = dailyData.filter((e) => {\r\n      return e.last_update.match(`01T`); //|| e.last_update.match(todaysDate);\r\n    });\r\n    dailyDataUpdated.unshift(dailyData[0]);\r\n    dailyDataUpdated.push(dailyData[dailyData.length - 1]);\r\n  }\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        // labels:dateData ,\r\n        labels: dailyDataUpdated.map(({ last_update }) =>\r\n          new Date(last_update).toDateString()\r\n        ),\r\n        datasets: [\r\n          {\r\n            data: dailyDataUpdated.map(\r\n              ({ total_recovered }) => total_recovered\r\n            ),\r\n            label: 'Recovered',\r\n            borderColor: 'green',\r\n            backgroundColor: ' rgba(0, 255, 0, 0.3)',\r\n\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyDataUpdated.map(({ total_deaths }) => total_deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: ' rgb(255, 0, 0)',\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyDataUpdated.map(({ total_cases }) => total_cases),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.chartWrapper}>\r\n        <div className={styles.chartAreaWrapper}>{lineChart} </div>\r\n        <i>\r\n          <h6>\r\n            <u> Data Collected From 22-Jan-2020</u>\r\n          </h6>\r\n        </i>\r\n      </div>\r\n\r\n      <div className={styles.card}>\r\n        <h4>\r\n          For every <span className={styles.blue}>100</span> people in the\r\n          community who had gotten infected, approximately\r\n          <span className={styles.red}> {deathPer} </span> ended up dying.\r\n        </h4>\r\n        <h3>\r\n          Made With <span>❤</span> by\r\n          <u>\r\n            <i>\r\n              {' '}\r\n              <a href='https://github.com/01kingmaker01/Covid-Tracker'>\r\n                {' '}\r\n                Ketan Chavan\r\n              </a>\r\n            </i>\r\n          </u>\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { countriesName } from '../../api';\r\nconst CountryPicker = ({ handleCountry }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      setFetchedCountries(await countriesName());\r\n    };\r\n    fetchCountries();\r\n  }, [setFetchedCountries]);\r\n  // console.log(fetchedCountries);\r\n\r\n  return (\r\n    <FormControl variant='filled' className={styles.formControl}>\r\n      <NativeSelect\r\n        className={styles.select}\r\n        defaultValue=''\r\n        onChange={(e) => handleCountry(e.target.value)}\r\n      >\r\n        <option value='' className={styles.option}>\r\n          Global\r\n        </option>\r\n        {fetchedCountries.map((country, i) => (\r\n          <option className={styles.option} key={i} value={country.alpha2}>\r\n            {country.name}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React, { Component } from 'react';\r\n// import Modal from '@material-ui/core/Modal';\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n// import Loader from './Loader';\r\nimport { DotLoader } from 'react-spinners';\r\nimport covid from './image.png';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    data: {},\r\n    isLoading: true,\r\n    country: '',\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    // console.log(fetchedData[0]);\r\n    this.setState({ data: fetchedData[0], isLoading: false });\r\n  }\r\n\r\n  handleCountry = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({\r\n      data: fetchedData[0],\r\n      country,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <div className={styles.App}>\r\n          <DotLoader loading />\r\n          Fetching Data\r\n        </div>\r\n      );\r\n    }\r\n    // console.log(this.state.data);\r\n    return (\r\n      <div>\r\n        <div className={styles.container}>\r\n          <img src={covid} className={styles.image} alt='covid' />\r\n          <Cards data={this.state.data} />\r\n          <CountryPicker handleCountry={this.handleCountry} />\r\n        </div>\r\n        <div className={styles.graphContainer}>\r\n          <Chart data={this.state.data} country={this.state.country} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2Kb3K\",\"select\":\"CountryPicker_select__1X8NR\",\"option\":\"CountryPicker_option__25BfR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1z2Z7\",\"graphContainer\":\"App_graphContainer__3oOhz\",\"image\":\"App_image__3yXUA\",\"App\":\"App_App__qzjZr\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}